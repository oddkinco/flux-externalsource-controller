apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flux-externalsource-controller.fullname" . }}-manager
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "flux-externalsource-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: manager
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      {{- include "flux-externalsource-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: manager
  template:
    metadata:
      labels:
        {{- include "flux-externalsource-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "flux-externalsource-controller.serviceAccountName" . }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.controller.securityContext | nindent 8 }}
      containers:
      - name: manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        {{- if .Values.controller.leaderElection }}
        - --leader-elect
        {{- end }}
        - --log-level={{ .Values.controller.logLevel }}
        env:
        - name: STORAGE_BACKEND
          value: {{ .Values.controller.storage.backend }}
        {{- if eq .Values.controller.storage.backend "s3" }}
        {{- if .Values.controller.storage.s3.bucket }}
        - name: S3_BUCKET
          value: {{ .Values.controller.storage.s3.bucket }}
        {{- end }}
        {{- if .Values.controller.storage.s3.region }}
        - name: S3_REGION
          value: {{ .Values.controller.storage.s3.region }}
        {{- end }}
        {{- if .Values.controller.storage.s3.endpoint }}
        - name: S3_ENDPOINT
          value: {{ .Values.controller.storage.s3.endpoint }}
        {{- end }}
        {{- if .Values.controller.storage.s3.credentialsSecret.name }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.controller.storage.s3.credentialsSecret.name }}
              key: {{ .Values.controller.storage.s3.credentialsSecret.accessKeyKey }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.controller.storage.s3.credentialsSecret.name }}
              key: {{ .Values.controller.storage.s3.credentialsSecret.secretKeyKey }}
        {{- end }}
        {{- end }}
        - name: HTTP_TIMEOUT
          value: {{ .Values.controller.http.timeout }}
        - name: TRANSFORM_TIMEOUT
          value: {{ .Values.controller.transform.timeout }}
        {{- with .Values.controller.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        {{- if .Values.webhook.enabled }}
        - containerPort: {{ .Values.webhook.port }}
          name: webhook-server
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.controller.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.controller.containerSecurityContext | nindent 10 }}
        {{- with .Values.controller.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.controller.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10