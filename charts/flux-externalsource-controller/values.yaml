# Default values for flux-externalsource-controller
# This is a YAML-formatted file.
#
# Default namespace: flux-system
# The chart uses .Release.Namespace by default. To deploy to flux-system:
# helm install flux-externalsource-controller . --namespace flux-system --create-namespace

# Controller image configuration
image:
  repository: ghcr.io/oddkinco/flux-externalsource-controller
  tag: ""  # Defaults to chart appVersion
  pullPolicy: IfNotPresent

# Image pull secrets for private registries
imagePullSecrets: []

# Controller configuration
controller:
  # Number of controller replicas
  replicas: 1
  
  # Log level (debug, info, warn, error)
  logLevel: info
  
  # Enable leader election for multiple replicas
  leaderElection: true
  
  # Storage backend configuration
  storage:
    # Backend type: memory or s3
    backend: memory
    
    # S3 configuration (when backend is s3)
    s3:
      bucket: ""
      region: ""
      endpoint: ""
      # Credentials from secret
      credentialsSecret:
        name: ""
        accessKeyKey: "access-key"
        secretKeyKey: "secret-key"
  
  # HTTP client configuration
  http:
    timeout: 30s
    
  # Transformation configuration
  transform:
    timeout: 10s
  
  # Hook executor configuration
  hookExecutor:
    # Enable hook executor sidecar
    enabled: true
    # Hook executor endpoint URL
    endpoint: "http://localhost:8082"
    # Path to whitelist file
    whitelistPath: "/etc/hooks/whitelist.yaml"
    # Default timeout for hook execution
    timeout: "30s"
    # Hook executor port
    port: 8082
    # Hook executor image configuration
    image:
      repository: ghcr.io/oddkinco/externalsource-hook-executor
      tag: "latest"
      pullPolicy: IfNotPresent
    # Hook executor resource limits and requests
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
    # Hook executor security context for PodSecurity compliance
    securityContext:
      runAsNonRoot: true
      runAsUser: 65532
      fsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
    # Hook executor container security context
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
    # Hook executor whitelist configuration
    whitelist: |
      # Whitelist Configuration for Hook Executor
      #
      # This file defines which commands are allowed to be executed by hooks
      # and optionally restricts the arguments that can be passed to them.

      commands:
        # jq - JSON processor
        jq:
          allowed: true
          argumentPatterns:
            - "^\\..*"           # Allow field selectors starting with .
            - "^-[a-zA-Z]$"      # Allow single-letter flags like -r, -c
            - "^--[a-z-]+$"      # Allow long flags like --raw-output
            - "(?s)^.*$"        # Allow any jq filter expression including multiline (jq filters are safe, they don't execute shell commands)

        # yq - YAML processor
        yq:
          allowed: true
          argumentPatterns:
            - "^\\..*"           # Allow field selectors
            - "^-[a-zA-Z]$"      # Allow single-letter flags
            - "^--[a-z-]+$"      # Allow long flags

        # curl - HTTP client
        curl:
          allowed: true
          argumentPatterns:
            - "^https?://.*"     # Allow HTTP/HTTPS URLs
            - "^-[a-zA-Z]$"      # Allow single-letter flags
            - "^--[a-z-]+$"      # Allow long flags

        # bash - Shell for simple scripts
        bash:
          allowed: true
          argumentPatterns:
            - "^-c$"             # Only allow -c flag for inline scripts
            - "^[^;&|<>]+$"      # Disallow shell operators in arguments

        # grep - Search tool
        grep:
          allowed: true
          argumentPatterns:
            - "^-[a-zA-Z]+$"     # Allow flags
            - "^[^;&|<>]+$"      # Disallow shell operators

        # sed - Stream editor
        sed:
          allowed: true
          argumentPatterns:
            - "^-[a-zA-Z]$"      # Allow flags
            - "^s/.*"            # Allow substitution commands

        # awk - Text processing
        awk:
          allowed: true
          argumentPatterns:
            - "^-[a-zA-Z]$"      # Allow flags
            - "^\\{.*\\}$"       # Allow awk scripts in braces
            - "^[^;&|<>]+$"      # Disallow shell operators

        # Dangerous commands - explicitly disallowed
        rm:
          allowed: false

        dd:
          allowed: false

        mkfs:
          allowed: false

        shutdown:
          allowed: false

        reboot:
          allowed: false
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 64Mi
  
  # Node selector for pod assignment
  nodeSelector: {}
  
  # Tolerations for pod assignment
  tolerations: []
  
  # Affinity for pod assignment
  affinity: {}
  
  # Security context for the controller pod
  securityContext:
    runAsNonRoot: true
    runAsUser: 65532
    fsGroup: 65532
    seccompProfile:
      type: RuntimeDefault
  
  # Security context for the controller container
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault
  
  # Additional environment variables
  env: []
  # - name: CUSTOM_VAR
  #   value: "custom-value"
  
  # Additional volumes
  volumes: []
  # - name: custom-volume
  #   configMap:
  #     name: custom-config
  
  # Additional volume mounts
  volumeMounts: []
  # - name: custom-volume
  #   mountPath: /etc/custom
  #   readOnly: true

# Service account configuration
serviceAccount:
  # Create a service account
  create: true
  # Name of the service account (generated if not specified)
  name: ""
  # Annotations for the service account
  annotations: {}

# RBAC configuration
rbac:
  # Create RBAC resources
  create: true

# Metrics service configuration
metrics:
  # Enable metrics service
  enabled: true
  
  # Service configuration
  service:
    type: ClusterIP
    port: 8080
    annotations: {}
  
  # ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    annotations: {}
    interval: 30s
    scrapeTimeout: 10s

# Webhook configuration (if webhooks are implemented)
webhook:
  enabled: false
  port: 9443
  
  # Certificate configuration
  certificate:
    # Use cert-manager for certificate management
    certManager: false
    # Certificate duration
    duration: 8760h  # 1 year
    # Certificate renewal before expiry
    renewBefore: 720h  # 30 days

# Custom Resource Definitions
crds:
  # Install CRDs as part of the chart
  install: true
  # Keep CRDs on chart uninstall
  keep: true

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Network policies
networkPolicy:
  enabled: false
  # Ingress rules
  ingress: []
  # Egress rules  
  egress: []

# Priority class for pods
priorityClassName: ""

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Deployment annotations
deploymentAnnotations: {}

# Common labels applied to all resources
commonLabels: {}

# Name override for resources
nameOverride: ""

# Full name override for resources
fullnameOverride: ""
