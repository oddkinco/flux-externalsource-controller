name: Helm Chart Release

on:
  push:
    branches:
      - main
    paths:
      - 'charts/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  release-helm-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install chart-releaser
      run: |
        curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.6.0/chart-releaser_1.6.0_linux_amd64.tar.gz"
        tar -xzf cr.tar.gz
        sudo mv cr /usr/local/bin/cr

    - name: Check for chart changes
      id: changes
      run: |
        if git diff --name-only HEAD~1 HEAD | grep -q "charts/"; then
          echo "charts-changed=true" >> $GITHUB_OUTPUT
        else
          echo "charts-changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Bump chart version
      if: steps.changes.outputs.charts-changed == 'true'
      run: |
        # Get current version
        CURRENT_VERSION=$(grep '^version:' charts/fx-controller/Chart.yaml | awk '{print $2}')
        
        # Increment patch version
        NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        
        # Update Chart.yaml
        sed -i "s/version: $CURRENT_VERSION/version: $NEW_VERSION/" charts/fx-controller/Chart.yaml
        
        echo "Updated chart version from $CURRENT_VERSION to $NEW_VERSION"
        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Package and release chart
      if: steps.changes.outputs.charts-changed == 'true'
      run: |
        # Create packages directory
        mkdir -p .cr-release-packages
        
        # Package chart
        helm package charts/fx-controller --destination .cr-release-packages
        
        # Push to OCI registry
        helm push .cr-release-packages/fx-controller-*.tgz oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts

    - name: Create GitHub release for chart
      if: steps.changes.outputs.charts-changed == 'true'
      run: |
        # Upload chart to GitHub releases
        cr upload -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} --token ${{ secrets.GITHUB_TOKEN }}
        
        # Update index
        cr index -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} --charts-repo https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }} --token ${{ secrets.GITHUB_TOKEN }}

    - name: Commit version bump
      if: steps.changes.outputs.charts-changed == 'true'
      run: |
        git add charts/fx-controller/Chart.yaml
        git commit -m "chore: bump chart version to ${{ steps.bump-version.outputs.new-version }}" || exit 0
        git push