version: '3.8'

services:
  # k0s Kubernetes cluster
  k0s:
    image: k0sproject/k0s:v1.28.4-k0s.0
    container_name: k0s-cluster
    hostname: k0s
    privileged: true
    volumes:
      - /var/lib/k0s
      - ./k0s-config.yaml:/etc/k0s/k0s.yaml:ro
      - ./scripts:/scripts:ro
    ports:
      - "6443:6443"  # Kubernetes API
      - "80:80"      # Ingress HTTP
      - "443:443"    # Ingress HTTPS
    networks:
      - k8s-network
    command: k0s controller --config=/etc/k0s/k0s.yaml
    healthcheck:
      test: ["CMD", "k0s", "kubectl", "get", "nodes"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Simple HTTP server for testing ExternalSource
  test-api:
    image: nginx:alpine
    container_name: test-api-server
    volumes:
      - ./test-data:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    networks:
      - k8s-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # MinIO for S3-compatible storage testing
  minio:
    image: minio/minio:latest
    container_name: minio-storage
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - k8s-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Test runner container
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: integration-test-runner
    depends_on:
      k0s:
        condition: service_healthy
      test-api:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./scripts:/scripts:ro
      - ./test-cases:/test-cases:ro
      - kubeconfig:/root/.kube
    networks:
      - k8s-network
    environment:
      - KUBECONFIG=/root/.kube/config
      - K0S_HOST=k0s
      - TEST_API_HOST=test-api
      - MINIO_HOST=minio
    command: /scripts/run-integration-tests.sh

volumes:
  minio-data:
  kubeconfig:

networks:
  k8s-network:
    driver: bridge